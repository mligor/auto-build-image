variables:
  DOCKER_DRIVER: overlay2

  BUILD_IMAGE_NAME: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA"
  RELEASE_IMAGE_NAME: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:stable"

  CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/$CI_JOB_NAME"

services:
  - docker:stable-dind

stages:
  - build
  - test
  - release

build:
  stage: build
  image: docker:stable
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --tag "$BUILD_IMAGE_NAME" .
    - docker push "$BUILD_IMAGE_NAME"

test-shellcheck:
  stage: test
  image: koalaman/shellcheck-alpine
  script:
    - shellcheck src/build.sh

test-dockerfile:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  script:
    - cd "$CI_PROJECT_DIR/test/ruby_with_dockerfile"
    - /build/build.sh

test-herokuish:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  script:
    - cd "$CI_PROJECT_DIR/test/ruby"
    - /build/build.sh

test-herokuish-with-procfile:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  script:
    - cd "$CI_PROJECT_DIR/test/ruby_with_procfile"
    - /build/build.sh

test-herokuish-with-buildpack-url:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  variables:
    BUILDPACK_URL: https://github.com/HashNuke/heroku-buildpack-elixir.git
  script:
    - cd "$CI_PROJECT_DIR/test/elixir"
    - /build/build.sh

release:
  stage: release
  image: docker:stable
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker pull "$BUILD_IMAGE_NAME"
    - docker tag "$BUILD_IMAGE_NAME" "$RELEASE_IMAGE_NAME"
    - docker push "$RELEASE_IMAGE_NAME"
